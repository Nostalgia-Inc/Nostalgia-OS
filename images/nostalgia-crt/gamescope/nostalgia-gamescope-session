#!/usr/bin/env bash
set -euo pipefail

GAMESCOPE_ARGS=(-e -f)
VIDEO_DIR="/usr/share/nostalgia/media"
INTRO="${VIDEO_DIR}/boot-intro.mov"
OUTRO="${VIDEO_DIR}/boot-outro.mov"
MPV=(mpv --fs --no-osc --no-osd-bar --really-quiet --loop-file=no --keep-open=no)

# Prefer Flatpak Steam; fallback to system steam
if command -v flatpak >/dev/null 2>&1 && flatpak info com.valvesoftware.Steam >/dev/null 2>&1; then
  LAUNCH_CMD=(flatpak run com.valvesoftware.Steam -gamepadui)
elif command -v steam >/dev/null 2>&1; then
  LAUNCH_CMD=(steam -gamepadui)
else
  # Don’t bounce back to SDDM instantly; offer to install then exit 0 so SDDM returns
  LAUNCH_CMD=(bash -lc 'echo "Steam not installed. Installing via Flatpak...";
                        flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo || true;
                        flatpak install -y --noninteractive flathub com.valvesoftware.Steam || true;
                        echo "Press Enter to quit to SDDM"; read; exit 0')
fi

# Run INSIDE gamescope
exec gamescope "${GAMESCOPE_ARGS[@]}" -- bash -lc '
  set -euo pipefail
  INTRO="'"$INTRO"'"
  OUTRO="'"$OUTRO"'"
  MPV=("'"${MPV[@]}"'")
  LAUNCH=("'"${LAUNCH_CMD[@]}"'")

  [[ -f "$INTRO" ]] && "${MPV[@]}" "$INTRO" || true

  # Run Steam once. If user chooses “Switch to Desktop” (normal exit), we exit 0 → SDDM.
  "${LAUNCH[@]}"
  ret=$?

  [[ -f "$OUTRO" ]] && "${MPV[@]}" "$OUTRO" || true

  # If Steam crashed (non-zero), sleep briefly and still return to SDDM instead of looping forever.
  [[ $ret -ne 0 ]] && sleep 2
  exit 0
'
